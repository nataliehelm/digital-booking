variables:
  FRONTEND_PATH: "frontend/fe-digital-booking/"
  BACKEND_PATH: "backend/be-digital-booking/"

stages:  # List of stages for jobs, and their order of execution
  - test
  - build     
  - delivery
  
test-front: # This job runs in the test stage, which runs first.
  stage: test
  image: node:19-alpine3.15
  script:
    - echo "Testing front... (BY PASSED)"
    - cd $FRONTEND_PATH
    - npm install
    #- npm test -- --watchAll=false
  cache:
    paths:
      - $FRONTEND_PATH/node_modules/
    key:
      files:
        - $FRONTEND_PATH/package-lock.json
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^main/
      changes:
        - frontend/**/* 

build-front: # This job runs in the build stage, which runs second.
  stage: build
  image: node:19-alpine3.15 
  script:
    - cd $FRONTEND_PATH
    - npm run build
  cache:
    key:
      files:
        - $FRONTEND_PATH/package-lock.json
    paths:
      - $FRONTEND_PATH/node_modules
      - $FRONTEND_PATH/build
    policy: pull
  artifacts:
    paths:
      - $FRONTEND_PATH/build/
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^main/
      changes:
        - frontend/**/* 

delivery-front: # This job runs in the deploy stage, which runs third.
  stage: delivery
  image: node:19.0-bullseye
  before_script:
  - apt update
  - apt install curl -y && apt install unzip -y
  - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  - unzip -q awscliv2.zip
  - ./aws/install
  script:
    - aws s3 sync $FRONTEND_PATH/build/ s3://$S3_BUCKET/build --acl public-read
  cache:
    key:
      files:
        - $FRONTEND_PATH/package-lock.json
    paths:
      - $FRONTEND_PATH/node_modules
      - $FRONTEND_PATH/build
    policy: pull
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^main/
      changes:
        - frontend/**/*    

############################################################################

test-back:       # This job runs in the test stage, which runs first.
  stage: test
  script:
  - echo "//TODO test"
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^main/
      changes:
        - backend/**/* 
    
build-back:       # This job runs in the build stage, which runs first.
  stage: build
  image: maven:3.8.6-eclipse-temurin-17
  script:
    - cd $BACKEND_PATH
    - mvn clean package
  artifacts:
    paths: 
      - $BACKEND_PATH/target/*.jar
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^main/
      changes:
        - backend/**/* 

delivery-back:       # This job runs in the deploy stage, which runs first.
  stage: delivery
  image: alpine:3.11
  before_script:
    - apk update && apk add openssh-client bash
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$SSH_KEY_PV" | tr -d '\r' | ssh-add - > /dev/null
    - touch ~/.ssh/config
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - ssh-keyscan -H $DEPLOY_SERVER_IP_BE >> ~/.ssh/known_hosts
  script:
    - echo "delivering..."
    - scp $BACKEND_PATH/target/*.jar ubuntu@$$DEPLOY_SERVER_IP_BE:~/target/dbapi.jar
  environment: prod
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^main/
      changes:
        - backend/**/* 
